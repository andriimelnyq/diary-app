{"version":3,"sources":["components/ItemForm/ItemForm.tsx","components/Item/Item.tsx","components/Items/Items.tsx","components/CommentForm/CommentForm.tsx","components/Comment/Comment.tsx","components/Comments/Comments.tsx","App.tsx","index.tsx"],"names":["ItemForm","_ref","setItems","_useState","useState","_useState2","_slicedToArray","itemName","setItemName","generateRandomId","min","Math","floor","random","toString","_jsxs","className","onSubmit","e","preventDefault","items","concat","_toConsumableArray","id","name","comments","onSubmitHandler","children","_jsx","type","value","placeholder","onChange","target","required","Item","item","setActiveItem","isSelected","onClickItemHandler","onClick","onKeyDown","role","tabIndex","length","stopPropagation","filter","currentItem","onDeleteItem","Items","activeItem","map","CommentForm","color","setColor","_useState3","_useState4","body","setBody","newCommentId","_objectSpread","onSubmitFormHandler","hexColor","text","Comment","comment","style","backgroundColor","Comments","_Fragment","App","useEffect","localeItems","localStorage","getItem","localeActiveItem","JSON","parse","setItem","stringify","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cfe81ba.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { ItemType } from '../../types/ItemType';\nimport './ItemForm.scss';\n\ntype Props = {\n  setItems: React.Dispatch<React.SetStateAction<ItemType[]>>\n};\n\nexport const ItemForm: React.FC<Props> = ({ setItems }) => {\n  const [itemName, setItemName] = useState('');\n\n  const generateRandomId = () => {\n    const min = 10000000;\n    const max = 99999999;\n    const randomId = Math.floor(Math.random() * (max - min + 1)) + min;\n\n    return randomId.toString();\n  };\n\n  const onChangeInput = (name: string) => setItemName(name);\n\n  const onSubmitHandler = (e: React.FormEvent) => {\n    e.preventDefault();\n    setItems(items => (\n      [...items,\n        { id: generateRandomId(), name: itemName, comments: [] },\n      ]\n    ));\n\n    setItemName('');\n  };\n\n  return (\n    <form className=\"item-form\" onSubmit={e => onSubmitHandler(e)}>\n      <input\n        type=\"text\"\n        className=\"item-form__input\"\n        value={itemName}\n        placeholder=\"Type name here...\"\n        onChange={e => onChangeInput(e.target.value)}\n        required\n      />\n      <button\n        type=\"submit\"\n        className=\"item-form__button\"\n      >\n        Add New\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { ItemType } from '../../types/ItemType';\nimport './Item.scss';\n\ntype Props = {\n  item: ItemType;\n  isSelected: boolean;\n  setActiveItem: React.Dispatch<React.SetStateAction<ItemType | null>>;\n  setItems: React.Dispatch<React.SetStateAction<ItemType[]>>;\n};\n\nexport const Item: React.FC<Props> = ({\n  item, setActiveItem, isSelected, setItems,\n}) => {\n  const onClickItemHandler = () => {\n    setActiveItem(item);\n  };\n\n  const onDeleteItem = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (isSelected) {\n      setActiveItem(null);\n    }\n\n    setItems(items => (\n      items.filter(currentItem => currentItem.id !== item.id)\n    ));\n  };\n\n  return (\n    <div\n      className={`item ${isSelected ? 'item--selected' : ''}`}\n      onClick={onClickItemHandler}\n      onKeyDown={onClickItemHandler}\n      role=\"button\"\n      tabIndex={0}\n    >\n      {item.name}\n\n      <div className=\"item__container\">\n        <div className=\"item__comments-length\">\n          {item.comments.length}\n        </div>\n        <button\n          className=\"item__button\"\n          type=\"button\"\n          onClick={e => onDeleteItem(e)}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ItemType } from '../../types/ItemType';\nimport { ItemForm } from '../ItemForm';\nimport { Item } from '../Item';\n\ntype Props = {\n  items: ItemType[];\n  setItems: React.Dispatch<React.SetStateAction<ItemType[]>>;\n  activeItem: ItemType | null;\n  setActiveItem: React.Dispatch<React.SetStateAction<ItemType | null>>;\n};\n\nexport const Items: React.FC<Props> = ({\n  items, setItems, activeItem, setActiveItem,\n}) => {\n  return (\n    <section className=\"main-container\">\n      <div className=\"main-container__title\">Items</div>\n      <ItemForm setItems={setItems} />\n\n      {items.length > 0\n        ? (\n          <div>\n            {items.map(item => (\n              <Item\n                item={item}\n                isSelected={item.id === activeItem?.id}\n                setActiveItem={setActiveItem}\n                setItems={setItems}\n                key={item.id}\n              />\n            ))}\n          </div>\n        )\n        : (<p>Add items</p>)}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport { ItemType } from '../../types/ItemType';\nimport './CommentForm.scss';\n\ntype Props = {\n  activeItem: ItemType | null;\n  setItems: React.Dispatch<React.SetStateAction<ItemType[]>>\n  setActiveItem: React.Dispatch<React.SetStateAction<ItemType | null>>;\n};\n\nexport const CommentForm: React.FC<Props> = ({ setItems, setActiveItem, activeItem }) => {\n  const [color, setColor] = useState('#000000');\n  const [body, setBody] = useState('');\n\n  const onChangeColorHandler = (hexColor: string) => setColor(hexColor);\n  const onChangeBodyHandler = (text: string) => setBody(text);\n  const onSubmitFormHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const newCommentId = `${activeItem?.id}-${activeItem?.comments.length}`;\n\n    if (activeItem) {\n      setActiveItem({\n        ...activeItem,\n        comments: [\n          ...activeItem.comments,\n          {\n            id: newCommentId,\n            body,\n            color,\n          },\n        ],\n      });\n    }\n\n    setItems(items => (\n      items.map(item => (item.id === activeItem?.id\n        ? {\n          ...item,\n          comments: [\n            ...activeItem.comments,\n            {\n              id: newCommentId,\n              body,\n              color,\n            },\n          ],\n        }\n        : item))\n    ));\n\n    setBody('');\n    setColor('#000000');\n  };\n\n  return (\n    <form\n      className=\"comment-form\"\n      onSubmit={e => onSubmitFormHandler(e)}\n    >\n      <input\n        className=\"comment-form__color\"\n        type=\"color\"\n        value={color}\n        onChange={e => onChangeColorHandler(e.target.value)}\n        required\n      />\n      <textarea\n        className=\"comment-form__body\"\n        value={body}\n        onChange={e => onChangeBodyHandler(e.target.value)}\n        required\n      />\n      <button\n        className=\"comment-form__button\"\n        type=\"submit\"\n      >\n        Add New\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { CommentType } from '../../types/CommentType';\nimport './Comment.scss';\n\ntype Props = {\n  comment: CommentType;\n};\n\nexport const Comment: React.FC<Props> = ({ comment }) => {\n  return (\n    <div className=\"comment\">\n      <div className=\"comment__color\" style={{ backgroundColor: comment.color }}></div>\n      <div className=\"comment__body\">{comment.body}</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ItemType } from '../../types/ItemType';\nimport { CommentForm } from '../CommentForm';\nimport { Comment } from '../Comment';\n\ntype Props = {\n  activeItem: ItemType | null;\n  setItems: React.Dispatch<React.SetStateAction<ItemType[]>>\n  setActiveItem: React.Dispatch<React.SetStateAction<ItemType | null>>;\n};\n\nexport const Comments: React.FC<Props> = ({ activeItem, setItems, setActiveItem }) => {\n  return (\n    <section className=\"main-container\">\n      <div className=\"main-container__title\">\n        {activeItem\n          ? `Comments #${activeItem?.id}`\n          : \"The item hasn't been selected yet!\"}\n      </div>\n\n      {activeItem && (\n        <>\n          <li className=\"main-container__list\">\n            {activeItem?.comments.map(comment => (\n              <Comment comment={comment} key={comment.id} />\n            ))}\n          </li>\n\n          <CommentForm\n            activeItem={activeItem}\n            setItems={setItems}\n            setActiveItem={setActiveItem}\n          />\n        </>\n      )}\n    </section>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Items } from './components/Items';\nimport { ItemType } from './types/ItemType';\nimport { Comments } from './components/Comments';\n\nexport const App = () => {\n  const [items, setItems] = useState<ItemType[]>([]);\n  const [activeItem, setActiveItem] = useState<ItemType | null>(null);\n\n  useEffect(() => {\n    const localeItems = localStorage.getItem('items');\n    const localeActiveItem = localStorage.getItem('activeItem');\n\n    if (localeItems) {\n      setItems(JSON.parse(localeItems));\n    }\n\n    if (localeActiveItem) {\n      setActiveItem(JSON.parse(localeActiveItem));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('items', JSON.stringify(items));\n  }, [items]);\n\n  useEffect(() => {\n    localStorage.setItem('activeItem', JSON.stringify(activeItem));\n  }, [activeItem]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__info\">\n        <div className=\"app__title\">DAYRY APP</div>\n        <div className=\"app__subtitle\">Comment whit no sense</div>\n      </div>\n\n      <main className=\"app__content\">\n        <Items\n          items={items}\n          setItems={setItems}\n          activeItem={activeItem}\n          setActiveItem={setActiveItem}\n        />\n\n        <Comments\n          activeItem={activeItem}\n          setItems={setItems}\n          setActiveItem={setActiveItem}\n        />\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}